version: "3.8"

services:
  db:
    image: postgres:12
    container_name: dtb_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - ./.env
    ports:
      - "5433:5432"
  redis:
    image: redis:alpine
    container_name: dtb_redis

  web:
    build: .
    container_name: dtb_django
   # command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && gunicorn --config gunicorn_config.py dtb.wsgi:application"
    volumes:
      - .:/code
      - /var/www/static/:/var/www/static/
#    ports:
#      - "8000:8000"
    expose:
      - "8000"
    env_file:
      - ./.env
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    build: ./nginx/
    ports:
      - "80:80"
      - "443:443"
    env_file: .env
    volumes:
      - /var/www/static/:/var/www/static/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - www-certs:/etc/letsencrypt
    depends_on:
      - web

  bot:
    build: .
    container_name: dtb_bot
    command: python run_pooling.py
    env_file:
      - ./.env
    depends_on:
      - web
  celery:
    build: .
    container_name: dtb_celery
    command: celery -A dtb worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
  celery-beat:
    build: .
    container_name: dtb_beat
    command: celery -A dtb beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web

  certbot:
    image: certbot/certbot:latest
    volumes:
      - /var/certbot/conf:/etc/letsencrypt/:rw
      - /var/certbot/www/:/var/www/certbot/:rw
    depends_on:
      - nginx


volumes:
  postgres_data: